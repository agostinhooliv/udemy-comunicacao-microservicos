server:
  port: ${PORT:8081}

spring:
    application:
      name: Product-api

    main:
      allow-circular-references: true
      allow-bean-definition-overrinding: true

    datasource:
      driver-class-name: org.postgresql.Driver
      url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5433}/${DB_NAME:product-db}
      username: ${DB_USER:admin}
      password: ${DB_PASSWORD:123456}
      init-mode: always
      initialize: true
      continue-on-error: true
      maxActive: 3

    jpa:
      hibernate:
        ddl-auto: create-drop
      format-sql: true
      generate-ddl: true
      show-sql: true
      properties:
        hibernate:
            dialect: org.hibernate.dialect.PostgreSQLDialect

    rabbitmq:
      host: ${RABBIT_MQ_HOST:localhost}
      port: ${RABBIT_MQ_PORT:5672}
      username: ${RABBIT_MQ_USER:guest}
      password: ${RABBIT_MQ_PASS:guest}

app-config:

  services:
    sales: http://${SALES_HOST:localhost}:${SALES_PORT:8082}
  secrets:
    api-secret: ${API_SECRET:YXV0aC5hcGktc2VjcmV0LWRldmVsb3AxMjM0NTY=}

  rabbit:
    exchange:
      product: product.topic
    routingkey:
      product-stock: product-stock-update.routingKey
      sales-confirmation: sales-confimation.routingKey
    queue:
      product-stock: product-stock-update.queue
      sales-confirmation: sales-confirmation.queue
